{"ast":null,"code":"var _jsxFileName = \"/Users/genesis/Desktop/projects/JS-Cheatsheet/react/state-managers/useref/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const inputRef = useRef(null);\n  const [names, setNames] = useState([]);\n\n  // After the first render will have the reference to the input fields\n  useEffect(() => {\n    var _inputRef$current;\n    inputRef === null || inputRef === void 0 ? void 0 : (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  }, []);\n  const onAddName = () => {\n    var _inputRef$current2;\n    setNames([...names, inputRef === null || inputRef === void 0 ? void 0 : (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.value]);\n    inputRef.current.value = \"\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: names.map((name, index) => {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: inputRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onAddName,\n      children: \"Add Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"+vnd7Z1lj+TTPThA9tlWgnQ7/VA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","App","inputRef","names","setNames","current","focus","onAddName","value","map","name","index"],"sources":["/Users/genesis/Desktop/projects/JS-Cheatsheet/react/state-managers/useref/src/App.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n    const inputRef = useRef<any>(null);\n    const [names, setNames] = useState<any>([]);\n\n    // After the first render will have the reference to the input fields\n    useEffect(() => {\n        inputRef?.current?.focus();\n    }, []);\n\n    const onAddName = () => {\n        setNames([...names, inputRef?.current?.value]);\n        inputRef.current.value = \"\";\n    };\n\n    return (\n        <div className=\"App\">\n            <div>\n                {names.map((name: string, index: number) => {\n                    return <ul key={index}>{name}</ul>;\n                })}\n            </div>\n            <input type=\"text\" ref={inputRef} />\n            <button onClick={onAddName}>Add Name</button>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACX,MAAMC,QAAQ,GAAGH,MAAM,CAAM,IAAI,CAAC;EAClC,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAM,EAAE,CAAC;;EAE3C;EACAF,SAAS,CAAC,MAAM;IAAA;IACZI,QAAQ,aAARA,QAAQ,4CAARA,QAAQ,CAAEG,OAAO,sDAAjB,kBAAmBC,KAAK,EAAE;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,SAAS,GAAG,MAAM;IAAA;IACpBH,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAED,QAAQ,aAARA,QAAQ,6CAARA,QAAQ,CAAEG,OAAO,uDAAjB,mBAAmBG,KAAK,CAAC,CAAC;IAC9CN,QAAQ,CAACG,OAAO,CAACG,KAAK,GAAG,EAAE;EAC/B,CAAC;EAED,oBACI;IAAK,SAAS,EAAC,KAAK;IAAA,wBAChB;MAAA,UACKL,KAAK,CAACM,GAAG,CAAC,CAACC,IAAY,EAAEC,KAAa,KAAK;QACxC,oBAAO;UAAA,UAAiBD;QAAI,GAAZC,KAAK;UAAA;UAAA;UAAA;QAAA,QAAa;MACtC,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACA,eACN;MAAO,IAAI,EAAC,MAAM;MAAC,GAAG,EAAET;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,eACpC;MAAQ,OAAO,EAAEK,SAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3C;AAEd;AAAC,GAzBQN,GAAG;AAAA,KAAHA,GAAG;AA2BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}